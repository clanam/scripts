#
# This pre-commit hook lint-fixes all altered js files.
#

printf "   üßπ Beginning pre-commit...\n"

starting_dir=$(pwd)
root_dir=`git rev-parse --show-toplevel`

cd $root_dir

altered_js_files=`git diff HEAD --cached --name-only --diff-filter=ACM | grep .js$ | grep -v .eslintrc.js$`

# eslint needs to be run from the directory with the node_modules folder because otherwise
# it cannot find the prettier plugin, so replace "subdirectory/" with "./" if the js project
# not in root. Note: the double slash before "subdirectory" is to replace all instances.
# altered_js_files=$(echo "${altered_js_files//subdirectory/.}")


if ! [ -z "$altered_js_files" ]
then
  printf "   üßπ linting js files with --fix...\n"
  # Manually clean up js files. If it fails, use || to ignore the error (we don't
  # want to block the commit). Let lint print its warnings
  $root_dir/node_modules/.bin/eslint --fix $altered_js_files || printf ""

  printf "   üçµ Adding linted files to git \n"
  for file in $altered_js_files
  do
    git add $file
  done
fi

# return to previous directory
cd $starting_dir
